{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/portofolio/porto_react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/portofolio/porto_react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/portofolio/porto_react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this;\n\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nvar initialState = {\n  token: \"\",\n  username: \"\",\n  password: \"\",\n  is_login: false,\n  nama_kontakkami: \"\",\n  email_kontakkami: \"\",\n  nomor_telepon_kontakkami: \"\",\n  pesan_kontakkami: \"\",\n  status_register: \"\",\n  name: \"\",\n  email: \"\",\n  phone_number: \"\",\n  testimoni: \"\",\n  listMobil: [],\n  mobilDetail: []\n};\nconsole.log(token);\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context.next = 3;\n                return axios.post(\"http://localhost:8010/proxy/user/login\", data).then(function (response) {\n                  if (response.data.hasOwnProperty(\"Token\")) {\n                    store.setState({\n                      token: response.data.Token,\n                      is_login: true\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    postKontakKami: function () {\n      var _postKontakKami = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  nama: state.nama,\n                  email: state.email,\n                  nomor_telepon: state.nomor_telepon,\n                  pesan: state.pesan\n                };\n                console.log(\"ini data kontakkami\", data);\n                _context2.next = 4;\n                return axios.post(\"http://localhost:8010/proxy/kontakkami\", data).then(function (response) {\n                  if (response.data.hasOwnProperty(\"Status\")) {\n                    store.setState({\n                      nama_kontakkami: response.data.Data.nama,\n                      email_kontakkami: response.data.Data.email,\n                      nomor_telepon_kontakkami: response.data.Data.nomor_telepon,\n                      pesan_kontakkami: response.data.Data.pesan\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postKontakKami(_x2) {\n        return _postKontakKami.apply(this, arguments);\n      }\n\n      return postKontakKami;\n    }(),\n    postRegister: function () {\n      var _postRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = {\n                  name: state.name,\n                  email: state.email,\n                  phone_number: state.phone_number,\n                  username: state.username,\n                  password: state.password\n                };\n                _context3.next = 3;\n                return axios.post(\"http://localhost:8010/proxy/user/register\", data).then(function (response) {\n                  if (response.data.hasOwnProperty(\"Status\")) {\n                    store.setState({\n                      status_register: response.data.Status\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function postRegister(_x3) {\n        return _postRegister.apply(this, arguments);\n      }\n\n      return postRegister;\n    }(),\n    postTestimoni: function () {\n      var _postTestimoni = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  testimoni: state.testimoni\n                };\n                console.log(_this.token); // const Authorization = \"Bearer \" + this.token;\n\n                _context4.next = 4;\n                return axios.post(\"http://localhost:8010/proxy/testimoni\", data).then(function (response) {\n                  if (response.data.hasOwnProperty(\"Data\")) {\n                    store.setState({\n                      testimoni: response.data.Data\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function postTestimoni(_x4) {\n        return _postTestimoni.apply(this, arguments);\n      }\n\n      return postTestimoni;\n    }(),\n    getAllMobil: function () {\n      var _getAllMobil = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(state) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(\"http://localhost:8010/proxy/mobil\").then(function (response) {\n                  // console.log(\"Ini data responset Get All Mobil \", response.data.Data);\n                  store.setState({\n                    listMobil: response.data.Data,\n                    mobilDetail: response.data.Data[0]\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getAllMobil(_x5) {\n        return _getAllMobil.apply(this, arguments);\n      }\n\n      return getAllMobil;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alphatech/portofolio/porto_react/src/store.js"],"names":["createStore","axios","initialState","token","username","password","is_login","nama_kontakkami","email_kontakkami","nomor_telepon_kontakkami","pesan_kontakkami","status_register","name","email","phone_number","testimoni","listMobil","mobilDetail","console","log","store","actions","setField","state","event","target","value","postLogout","postLogin","data","post","then","response","hasOwnProperty","setState","Token","catch","error","postKontakKami","nama","nomor_telepon","pesan","Data","postRegister","Status","postTestimoni","getAllMobil","get"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n  token: \"\",\n  username: \"\",\n  password: \"\",\n  is_login: false,\n  nama_kontakkami : \"\",\n  email_kontakkami : \"\",\n  nomor_telepon_kontakkami : \"\",\n  pesan_kontakkami : \"\",\n  status_register : \"\",\n  name : \"\",\n  email : \"\",\n  phone_number : \"\",\n  testimoni : \"\",\n  listMobil: [],\n  mobilDetail : []\n};\n\nconsole.log(token);\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n  setField: (state, event) => {\n    return { [event.target.name]: event.target.value };\n  },\n\n  postLogout: state => {\n    return { is_login: false };\n  },\n\n  postLogin: async state => {\n\n    const data = { username: state.username, password: state.password };\n    await axios\n      .post(\"http://localhost:8010/proxy/user/login\", data)\n      .then(response => {\n        if (response.data.hasOwnProperty(\"Token\")) {\n          store.setState({\n            token: response.data.Token,\n            is_login: true,\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postKontakKami: async state => {\n    const data = { nama : state.nama, email : state.email, nomor_telepon : state.nomor_telepon, pesan : state.pesan };\n    console.log(\"ini data kontakkami\", data);\n    await axios\n      .post(\"http://localhost:8010/proxy/kontakkami\", data)\n      .then(response => {\n        if (response.data.hasOwnProperty(\"Status\")) {\n          store.setState({\n            nama_kontakkami: response.data.Data.nama,\n            email_kontakkami : response.data.Data.email,\n            nomor_telepon_kontakkami : response.data.Data.nomor_telepon,\n            pesan_kontakkami : response.data.Data.pesan,\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postRegister: async state => {\n    const data = { name : state.name, email : state.email, phone_number : state.phone_number, username : state.username, password : state.password };\n    await axios\n      .post(\"http://localhost:8010/proxy/user/register\", data)\n      .then(response => {\n        if (response.data.hasOwnProperty(\"Status\")) {\n          store.setState({\n            status_register: response.data.Status,\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postTestimoni: async state => {\n    const data = { testimoni : state.testimoni};\n    console.log(this.token);\n    // const Authorization = \"Bearer \" + this.token;\n    await axios\n      .post(\"http://localhost:8010/proxy/testimoni\", data)\n      .then(response => {\n        if (response.data.hasOwnProperty(\"Data\")) {\n          store.setState({\n            testimoni: response.data.Data,\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  getAllMobil: async state => {\n    await axios\n      .get(\n        \"http://localhost:8010/proxy/mobil\"\n      )\n      .then(function(response) {\n        // console.log(\"Ini data responset Get All Mobil \", response.data.Data);\n        store.setState({\n          listMobil : response.data.Data,\n          mobilDetail : response.data.Data[0]\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n});\n\n"]},"metadata":{},"sourceType":"module"}