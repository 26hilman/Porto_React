{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/portofolio/porto_react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/portofolio/porto_react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/portofolio/porto_react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nvar initialState = {\n  token: \"\",\n  username: \"\",\n  password: \"\",\n  is_login: false,\n  nama_kontakkami: \"\",\n  email_kontakkami: \"\",\n  nomor_telepon_kontakkami: \"\",\n  pesan_kontakkami: \"\",\n  iata_asal: \"\",\n  airport_id_asal: \"\",\n  airport_name_asal: \"\",\n  nation_code_asal: \"\",\n  iata_tujuan: \"\",\n  airport_id_tujuan: \"\",\n  airport_name_tujuan: \"\",\n  nation_code_tujuan: \"\",\n  flight_list: [],\n  weather: \"\",\n  code: \"\",\n  weather_code: \"\",\n  temperature: \"\",\n  sunrise: \"\",\n  sunset: \"\",\n  rate: \"\",\n  base_currency: \"\",\n  target_currency: \"\",\n  new_sum: \"\",\n  base_sum: \"\",\n  word: \"\"\n};\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false\n      };\n    },\n    postLogin: function () {\n      var _postLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data, headers;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                headers = {\n                  headers: {\n                    \"X-Requested-With\": \"https://api.halocuk.web.id\"\n                  }\n                };\n                _context.next = 4;\n                return axios.post(\"http://localhost:8010/proxy/user/login\", data).then(function (response) {\n                  if (response.data.hasOwnProperty(\"Token\")) {\n                    store.setState({\n                      token: response.data.token,\n                      is_login: true\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLogin(_x) {\n        return _postLogin.apply(this, arguments);\n      }\n\n      return postLogin;\n    }(),\n    postKontakKami: function () {\n      var _postKontakKami = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  nama: state.nama,\n                  email: state.email,\n                  nomor_telepon: state.nomor_telepon,\n                  pesan: state.pesan\n                };\n                console.log(\"ini data kontakkami\", data);\n                _context2.next = 4;\n                return axios.post(\"http://localhost:8010/proxy/kontakkami\", data).then(function (response) {\n                  if (response.data.hasOwnProperty(\"Status\")) {\n                    store.setState({\n                      nama_kontakkami: response.data.Data.nama,\n                      email_kontakkami: response.data.Data.email,\n                      nomor_telepon_kontakkami: response.data.Data.nomor_telepon,\n                      pesan_kontakkami: response.data.Data.pesan\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postKontakKami(_x2) {\n        return _postKontakKami.apply(this, arguments);\n      }\n\n      return postKontakKami;\n    }(),\n    setAsal: function setAsal(state, e) {\n      store.setState({\n        iata_asal: e.target.value\n      });\n    },\n    setTujuan: function setTujuan(state, e) {\n      store.setState({\n        iata_tujuan: e.target.value\n      });\n    },\n    setCurrAsal: function setCurrAsal(state, e) {\n      store.setState({\n        base_currency: e.target.value\n      });\n    },\n    setCurrTujuan: function setCurrTujuan(state, e) {\n      store.setState({\n        target_currency: e.target.value\n      });\n    },\n    //get new currency\n    getNewCurrency: function () {\n      var _getNewCurrency = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state, moneysum) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency).then(function (response) {\n                  store.setState({\n                    rate: response.data.rates[state.target_currency]\n                  });\n                  var new_value = state.rate * moneysum;\n                  store.setState({\n                    new_sum: new_value\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getNewCurrency(_x3, _x4) {\n        return _getNewCurrency.apply(this, arguments);\n      }\n\n      return getNewCurrency;\n    }(),\n    //get weather\n    getWeather: function () {\n      var _getWeather = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(\"http://api.weatherbit.io/v2.0/current?lat=\" + state.latitude_tujuan + \"&lon=\" + state.longitude_tujuan + \"&key=aa3c976285c64dafa3662f2e99d4bd03\").then(function (response) {\n                  store.setState({\n                    weather: response.data.data[0].weather.description,\n                    temperature: response.data.data[0].temp,\n                    sunrise: response.data.data[0].sunrise,\n                    sunset: response.data.data[0].sunset,\n                    weather_code: response.data.data[0].weather.code\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getWeather(_x5) {\n        return _getWeather.apply(this, arguments);\n      }\n\n      return getWeather;\n    }(),\n    //get api data for flight and currency\n    getData: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(state) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.all([axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=57d91e-653b78&codeIataAirport=\" + state.iata_asal), axios.get(\"https://aviation-edge.com/v2/public/airportDatabase?key=57d91e-653b78&codeIataAirport=\" + state.iata_tujuan), axios.get(\"http://aviation-edge.com/v2/public/timetable?key=57d91e-653b78&type=departure&status=scheduled&iataCode=\" + state.iata_asal), axios.get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency)]).then(axios.spread(function (response1, response2, response3, response4) {\n                  store.setState({\n                    airport_id_asal: response1.data[0].airportId,\n                    airport_name_asal: response1.data[0].nameAirport,\n                    nation_code_asal: response1.data[0].codeIso2Country,\n                    latitude_asal: response1.data[0].latitudeAirport,\n                    longitude_asal: response1.data[0].longitudeAirport\n                  });\n                  store.setState({\n                    airport_id_tujuan: response2.data[0].airportId,\n                    airport_name_tujuan: response2.data[0].nameAirport,\n                    nation_code_tujuan: response2.data[0].codeIso2Country,\n                    latitude_tujuan: response2.data[0].latitudeAirport,\n                    longitude_tujuan: response2.data[0].longitudeAirport\n                  });\n                  store.setState({\n                    flight_list: response3.data\n                  });\n                  store.setState({\n                    rate: response4.data.rates.USD\n                  });\n                })).catch(function (error) {});\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getData(_x6) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/alphatech/portofolio/porto_react/src/store.js"],"names":["createStore","axios","initialState","token","username","password","is_login","nama_kontakkami","email_kontakkami","nomor_telepon_kontakkami","pesan_kontakkami","iata_asal","airport_id_asal","airport_name_asal","nation_code_asal","iata_tujuan","airport_id_tujuan","airport_name_tujuan","nation_code_tujuan","flight_list","weather","code","weather_code","temperature","sunrise","sunset","rate","base_currency","target_currency","new_sum","base_sum","word","store","actions","setField","state","event","target","name","value","postLogout","postLogin","data","headers","post","then","response","hasOwnProperty","setState","catch","error","console","log","postKontakKami","nama","email","nomor_telepon","pesan","Data","setAsal","e","setTujuan","setCurrAsal","setCurrTujuan","getNewCurrency","moneysum","get","rates","new_value","getWeather","latitude_tujuan","longitude_tujuan","description","temp","getData","all","spread","response1","response2","response3","response4","airportId","nameAirport","codeIso2Country","latitude_asal","latitudeAirport","longitude_asal","longitudeAirport","USD"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n  token: \"\",\n  username: \"\",\n  password: \"\",\n  is_login: false,\n  nama_kontakkami : \"\",\n  email_kontakkami : \"\",\n  nomor_telepon_kontakkami : \"\",\n  pesan_kontakkami : \"\",\n  iata_asal: \"\",\n  airport_id_asal: \"\",\n  airport_name_asal: \"\",\n  nation_code_asal: \"\",\n  iata_tujuan: \"\",\n  airport_id_tujuan: \"\",\n  airport_name_tujuan: \"\",\n  nation_code_tujuan: \"\",\n  flight_list: [],\n  weather: \"\",\n  code: \"\",\n  weather_code: \"\",\n  temperature: \"\",\n  sunrise: \"\",\n  sunset: \"\",\n  rate: \"\",\n  base_currency: \"\",\n  target_currency: \"\",\n  new_sum: \"\",\n  base_sum: \"\",\n  word: \"\",\n};\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n  setField: (state, event) => {\n    return { [event.target.name]: event.target.value };\n  },\n\n  postLogout: state => {\n    return { is_login: false };\n  },\n\n  postLogin: async state => {\n\n    const data = { username: state.username, password: state.password };\n    const headers = {headers: {\"X-Requested-With\" : \"https://api.halocuk.web.id\"}}\n    await axios\n      .post(\"http://localhost:8010/proxy/user/login\", data)\n      .then(response => {\n        if (response.data.hasOwnProperty(\"Token\")) {\n          store.setState({\n            token: response.data.token,\n            is_login: true,\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  postKontakKami: async state => {\n    const data = { nama : state.nama, email : state.email, nomor_telepon : state.nomor_telepon, pesan : state.pesan };\n    console.log(\"ini data kontakkami\", data);\n    await axios\n      .post(\"http://localhost:8010/proxy/kontakkami\", data)\n      .then(response => {\n        if (response.data.hasOwnProperty(\"Status\")) {\n          store.setState({\n            nama_kontakkami: response.data.Data.nama,\n            email_kontakkami : response.data.Data.email,\n            nomor_telepon_kontakkami : response.data.Data.nomor_telepon,\n            pesan_kontakkami : response.data.Data.pesan,\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  setAsal: (state, e) => {\n    store.setState({ iata_asal: e.target.value });\n  },\n\n  setTujuan: (state, e) => {\n    store.setState({ iata_tujuan: e.target.value });\n  },\n\n  setCurrAsal: (state, e) => {\n    store.setState({ base_currency: e.target.value });\n  },\n\n  setCurrTujuan: (state, e) => {\n    store.setState({ target_currency: e.target.value });\n  },\n\n  //get new currency\n  getNewCurrency: async (state, moneysum) => {\n    await axios\n      .get(\"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency)\n      .then(function(response) {\n        store.setState({ rate: response.data.rates[state.target_currency] });\n        const new_value = state.rate * moneysum;\n        store.setState({ new_sum: new_value });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  //get weather\n  getWeather: async state => {\n    await axios\n      .get(\n        \"http://api.weatherbit.io/v2.0/current?lat=\" +\n          state.latitude_tujuan +\n          \"&lon=\" +\n          state.longitude_tujuan +\n          \"&key=aa3c976285c64dafa3662f2e99d4bd03\"\n      )\n      .then(function(response) {\n        store.setState({\n          weather: response.data.data[0].weather.description,\n          temperature: response.data.data[0].temp,\n          sunrise: response.data.data[0].sunrise,\n          sunset: response.data.data[0].sunset,\n          weather_code: response.data.data[0].weather.code\n        });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  },\n\n  //get api data for flight and currency\n  getData: async state => {\n    await axios\n      .all([\n        axios.get(\n          \"https://aviation-edge.com/v2/public/airportDatabase?key=57d91e-653b78&codeIataAirport=\" +\n            state.iata_asal\n        ),\n        axios.get(\n          \"https://aviation-edge.com/v2/public/airportDatabase?key=57d91e-653b78&codeIataAirport=\" +\n            state.iata_tujuan\n        ),\n        axios.get(\n          \"http://aviation-edge.com/v2/public/timetable?key=57d91e-653b78&type=departure&status=scheduled&iataCode=\" +\n            state.iata_asal\n        ),\n        axios.get(\n          \"https://api.exchangeratesapi.io/latest?base=\" + state.base_currency\n        )\n      ])\n      .then(\n        axios.spread(function(response1, response2, response3, response4) {\n          store.setState({\n            airport_id_asal: response1.data[0].airportId,\n            airport_name_asal: response1.data[0].nameAirport,\n            nation_code_asal: response1.data[0].codeIso2Country,\n            latitude_asal: response1.data[0].latitudeAirport,\n            longitude_asal: response1.data[0].longitudeAirport\n          });\n          store.setState({\n            airport_id_tujuan: response2.data[0].airportId,\n            airport_name_tujuan: response2.data[0].nameAirport,\n            nation_code_tujuan: response2.data[0].codeIso2Country,\n            latitude_tujuan: response2.data[0].latitudeAirport,\n            longitude_tujuan: response2.data[0].longitudeAirport\n          });\n          store.setState({ flight_list: response3.data });\n          store.setState({ rate: response4.data.rates.USD });\n        })\n      )\n      .catch(function(error) {});\n  }\n});\n"]},"metadata":{},"sourceType":"module"}